{"version":3,"file":"app.js","sources":["constants/constants.js","components/request.js","app.js"],"sourcesContent":["export const GLOBAL_KEYS = {\r\n    API_KEY: \"PuotTxhNfOJCXPS0k0VbCbuXxaZaHPgo\"\r\n};","import {GLOBAL_KEYS} from '../constants/constants';\r\n\r\nexport const request = {\r\n    url: 'http://api.giphy.com/v1/gifs/search?q=funny+cat&api_key=',\r\n    app: null,\r\n    init: function () {\r\n        this.app = document.querySelector('.app');\r\n        const button = this.app.querySelector('button');\r\n\r\n        button.addEventListener('click', _ => {\r\n            this.requestHandler(this.buildUrl()).then(this.successCallback.bind(this));\r\n        })\r\n    },\r\n    buildUrl: function () {\r\n        const URL = this.url + GLOBAL_KEYS.API_KEY;\r\n        return URL;\r\n    },\r\n    requestHandler: function (url) {\r\n        return new Promise((resolve, reject) => {\r\n            const request = new XMLHttpRequest();\r\n            request.open('GET', url, true);\r\n            request.onload = function () {\r\n                if (this.status === 200) {\r\n                    resolve(JSON.parse(request.response));\r\n                } else {\r\n                    reject (new Error(this.statusText));\r\n                }\r\n            };\r\n            request.onerror = _ => reject(new Error(this.statusText));\r\n            request.send(null);\r\n        });\r\n    },\r\n    successCallback: function (response) {\r\n        const gifsArr = response.data;\r\n        const randomElem = gifsArr[Math.floor(Math.random() * gifsArr.length)];\r\n        const randomElemUrl = randomElem.images.original.url;\r\n        const imageWrapper = this.app.querySelector('#imgWrapper');\r\n        const loadedImage = this.app.querySelector('img');\r\n        this.deletePreviousElement(loadedImage, imageWrapper);\r\n        this.createNewElement(randomElemUrl, imageWrapper);\r\n    },\r\n    createNewElement: function (url, imageWrapper) {\r\n        const image = document.createElement('img');\r\n        image.src = url;\r\n        image.classList.add('app__image');\r\n        imageWrapper.appendChild(image);\r\n    },\r\n    deletePreviousElement: function (loadedImage, imageWrapper) {\r\n        if (!loadedImage) return;\r\n        imageWrapper.removeChild(loadedImage);\r\n    }\r\n};","import {request} from './components/request';\r\n\r\nrequest.init();"],"names":["GLOBAL_KEYS","request","app","document","querySelector","button","addEventListener","_","requestHandler","buildUrl","then","successCallback","bind","URL","url","API_KEY","Promise","resolve","reject","XMLHttpRequest","open","onload","status","JSON","parse","response","Error","statusText","onerror","send","gifsArr","data","randomElem","Math","floor","random","length","randomElemUrl","images","original","imageWrapper","loadedImage","deletePreviousElement","createNewElement","image","createElement","src","classList","add","appendChild","removeChild","init"],"mappings":";;;AAAO,MAAMA,cAAc;aACd;CADN;;ACEA,MAAMC,UAAU;SACd,0DADc;SAEd,IAFc;UAGb,YAAY;aACTC,GAAL,GAAWC,SAASC,aAAT,CAAuB,MAAvB,CAAX;cACMC,SAAS,KAAKH,GAAL,CAASE,aAAT,CAAuB,QAAvB,CAAf;;eAEOE,gBAAP,CAAwB,OAAxB,EAAiCC,KAAK;iBAC7BC,cAAL,CAAoB,KAAKC,QAAL,EAApB,EAAqCC,IAArC,CAA0C,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAA1C;SADJ;KAPe;cAWT,YAAY;cACZC,MAAM,KAAKC,GAAL,GAAWd,YAAYe,OAAnC;eACOF,GAAP;KAbe;oBAeH,UAAUC,GAAV,EAAe;eACpB,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;kBAC9BjB,UAAU,IAAIkB,cAAJ,EAAhB;oBACQC,IAAR,CAAa,KAAb,EAAoBN,GAApB,EAAyB,IAAzB;oBACQO,MAAR,GAAiB,YAAY;oBACrB,KAAKC,MAAL,KAAgB,GAApB,EAAyB;4BACbC,KAAKC,KAAL,CAAWvB,QAAQwB,QAAnB,CAAR;iBADJ,MAEO;2BACK,IAAIC,KAAJ,CAAU,KAAKC,UAAf,CAAR;;aAJR;oBAOQC,OAAR,GAAkBrB,KAAKW,OAAO,IAAIQ,KAAJ,CAAU,KAAKC,UAAf,CAAP,CAAvB;oBACQE,IAAR,CAAa,IAAb;SAXG,CAAP;KAhBe;qBA8BF,UAAUJ,QAAV,EAAoB;cAC3BK,UAAUL,SAASM,IAAzB;cACMC,aAAaF,QAAQG,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBL,QAAQM,MAAnC,CAAR,CAAnB;cACMC,gBAAgBL,WAAWM,MAAX,CAAkBC,QAAlB,CAA2BzB,GAAjD;cACM0B,eAAe,KAAKtC,GAAL,CAASE,aAAT,CAAuB,aAAvB,CAArB;cACMqC,cAAc,KAAKvC,GAAL,CAASE,aAAT,CAAuB,KAAvB,CAApB;aACKsC,qBAAL,CAA2BD,WAA3B,EAAwCD,YAAxC;aACKG,gBAAL,CAAsBN,aAAtB,EAAqCG,YAArC;KArCe;sBAuCD,UAAU1B,GAAV,EAAe0B,YAAf,EAA6B;cACrCI,QAAQzC,SAAS0C,aAAT,CAAuB,KAAvB,CAAd;cACMC,GAAN,GAAYhC,GAAZ;cACMiC,SAAN,CAAgBC,GAAhB,CAAoB,YAApB;qBACaC,WAAb,CAAyBL,KAAzB;KA3Ce;2BA6CI,UAAUH,WAAV,EAAuBD,YAAvB,EAAqC;YACpD,CAACC,WAAL,EAAkB;qBACLS,WAAb,CAAyBT,WAAzB;;CA/CD;;ACAPxC,QAAQkD,IAAR;;;;","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIkQ6L1Byb2plY3RzL3BvcnRmb2xpby9zcmMvanMvY29uc3RhbnRzL2NvbnN0YW50cy5qcyIsIkQ6L1Byb2plY3RzL3BvcnRmb2xpby9zcmMvanMvY29tcG9uZW50cy9yZXF1ZXN0LmpzIiwiRDovUHJvamVjdHMvcG9ydGZvbGlvL3NyYy9qcy9hcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEdMT0JBTF9LRVlTID0ge1xyXG4gICAgQVBJX0tFWTogXCJQdW90VHhoTmZPSkNYUFMwazBWYkNidVh4YVphSFBnb1wiXHJcbn07IiwiaW1wb3J0IHtHTE9CQUxfS0VZU30gZnJvbSAnLi4vY29uc3RhbnRzL2NvbnN0YW50cyc7XHJcblxyXG5leHBvcnQgY29uc3QgcmVxdWVzdCA9IHtcclxuICAgIHVybDogJ2h0dHA6Ly9hcGkuZ2lwaHkuY29tL3YxL2dpZnMvc2VhcmNoP3E9ZnVubnkrY2F0JmFwaV9rZXk9JyxcclxuICAgIGFwcDogbnVsbCxcclxuICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLmFwcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hcHAnKTtcclxuICAgICAgICBjb25zdCBidXR0b24gPSB0aGlzLmFwcC5xdWVyeVNlbGVjdG9yKCdidXR0b24nKTtcclxuXHJcbiAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgXyA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdEhhbmRsZXIodGhpcy5idWlsZFVybCgpKS50aGVuKHRoaXMuc3VjY2Vzc0NhbGxiYWNrLmJpbmQodGhpcykpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgYnVpbGRVcmw6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb25zdCBVUkwgPSB0aGlzLnVybCArIEdMT0JBTF9LRVlTLkFQSV9LRVk7XHJcbiAgICAgICAgcmV0dXJuIFVSTDtcclxuICAgIH0sXHJcbiAgICByZXF1ZXN0SGFuZGxlcjogZnVuY3Rpb24gKHVybCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuICAgICAgICAgICAgcmVxdWVzdC5vcGVuKCdHRVQnLCB1cmwsIHRydWUpO1xyXG4gICAgICAgICAgICByZXF1ZXN0Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0YXR1cyA9PT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShKU09OLnBhcnNlKHJlcXVlc3QucmVzcG9uc2UpKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0IChuZXcgRXJyb3IodGhpcy5zdGF0dXNUZXh0KSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHJlcXVlc3Qub25lcnJvciA9IF8gPT4gcmVqZWN0KG5ldyBFcnJvcih0aGlzLnN0YXR1c1RleHQpKTtcclxuICAgICAgICAgICAgcmVxdWVzdC5zZW5kKG51bGwpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIHN1Y2Nlc3NDYWxsYmFjazogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgY29uc3QgZ2lmc0FyciA9IHJlc3BvbnNlLmRhdGE7XHJcbiAgICAgICAgY29uc3QgcmFuZG9tRWxlbSA9IGdpZnNBcnJbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogZ2lmc0Fyci5sZW5ndGgpXTtcclxuICAgICAgICBjb25zdCByYW5kb21FbGVtVXJsID0gcmFuZG9tRWxlbS5pbWFnZXMub3JpZ2luYWwudXJsO1xyXG4gICAgICAgIGNvbnN0IGltYWdlV3JhcHBlciA9IHRoaXMuYXBwLnF1ZXJ5U2VsZWN0b3IoJyNpbWdXcmFwcGVyJyk7XHJcbiAgICAgICAgY29uc3QgbG9hZGVkSW1hZ2UgPSB0aGlzLmFwcC5xdWVyeVNlbGVjdG9yKCdpbWcnKTtcclxuICAgICAgICB0aGlzLmRlbGV0ZVByZXZpb3VzRWxlbWVudChsb2FkZWRJbWFnZSwgaW1hZ2VXcmFwcGVyKTtcclxuICAgICAgICB0aGlzLmNyZWF0ZU5ld0VsZW1lbnQocmFuZG9tRWxlbVVybCwgaW1hZ2VXcmFwcGVyKTtcclxuICAgIH0sXHJcbiAgICBjcmVhdGVOZXdFbGVtZW50OiBmdW5jdGlvbiAodXJsLCBpbWFnZVdyYXBwZXIpIHtcclxuICAgICAgICBjb25zdCBpbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG4gICAgICAgIGltYWdlLnNyYyA9IHVybDtcclxuICAgICAgICBpbWFnZS5jbGFzc0xpc3QuYWRkKCdhcHBfX2ltYWdlJyk7XHJcbiAgICAgICAgaW1hZ2VXcmFwcGVyLmFwcGVuZENoaWxkKGltYWdlKTtcclxuICAgIH0sXHJcbiAgICBkZWxldGVQcmV2aW91c0VsZW1lbnQ6IGZ1bmN0aW9uIChsb2FkZWRJbWFnZSwgaW1hZ2VXcmFwcGVyKSB7XHJcbiAgICAgICAgaWYgKCFsb2FkZWRJbWFnZSkgcmV0dXJuO1xyXG4gICAgICAgIGltYWdlV3JhcHBlci5yZW1vdmVDaGlsZChsb2FkZWRJbWFnZSk7XHJcbiAgICB9XHJcbn07IiwiaW1wb3J0IHtyZXF1ZXN0fSBmcm9tICcuL2NvbXBvbmVudHMvcmVxdWVzdCc7XHJcblxyXG5yZXF1ZXN0LmluaXQoKTsiXSwibmFtZXMiOlsiR0xPQkFMX0tFWVMiLCJyZXF1ZXN0IiwiYXBwIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl8iLCJyZXF1ZXN0SGFuZGxlciIsImJ1aWxkVXJsIiwidGhlbiIsInN1Y2Nlc3NDYWxsYmFjayIsImJpbmQiLCJVUkwiLCJ1cmwiLCJBUElfS0VZIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJvbmxvYWQiLCJzdGF0dXMiLCJKU09OIiwicGFyc2UiLCJyZXNwb25zZSIsIkVycm9yIiwic3RhdHVzVGV4dCIsIm9uZXJyb3IiLCJzZW5kIiwiZ2lmc0FyciIsImRhdGEiLCJyYW5kb21FbGVtIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIiwicmFuZG9tRWxlbVVybCIsImltYWdlcyIsIm9yaWdpbmFsIiwiaW1hZ2VXcmFwcGVyIiwibG9hZGVkSW1hZ2UiLCJkZWxldGVQcmV2aW91c0VsZW1lbnQiLCJjcmVhdGVOZXdFbGVtZW50IiwiaW1hZ2UiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiY2xhc3NMaXN0IiwiYWRkIiwiYXBwZW5kQ2hpbGQiLCJyZW1vdmVDaGlsZCIsImluaXQiXSwibWFwcGluZ3MiOiI7OztBQUFPLE1BQU1BLGNBQWM7YUFDZDtDQUROOztBQ0VBLE1BQU1DLFVBQVU7U0FDZCwwREFEYztTQUVkLElBRmM7VUFHYixZQUFZO2FBQ1RDLEdBQUwsR0FBV0MsU0FBU0MsYUFBVCxDQUF1QixNQUF2QixDQUFYO2NBQ01DLFNBQVMsS0FBS0gsR0FBTCxDQUFTRSxhQUFULENBQXVCLFFBQXZCLENBQWY7O2VBRU9FLGdCQUFQLENBQXdCLE9BQXhCLEVBQWlDQyxLQUFLO2lCQUM3QkMsY0FBTCxDQUFvQixLQUFLQyxRQUFMLEVBQXBCLEVBQXFDQyxJQUFyQyxDQUEwQyxLQUFLQyxlQUFMLENBQXFCQyxJQUFyQixDQUEwQixJQUExQixDQUExQztTQURKO0tBUGU7Y0FXVCxZQUFZO2NBQ1pDLE1BQU0sS0FBS0MsR0FBTCxHQUFXZCxZQUFZZSxPQUFuQztlQUNPRixHQUFQO0tBYmU7b0JBZUgsVUFBVUMsR0FBVixFQUFlO2VBQ3BCLElBQUlFLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7a0JBQzlCakIsVUFBVSxJQUFJa0IsY0FBSixFQUFoQjtvQkFDUUMsSUFBUixDQUFhLEtBQWIsRUFBb0JOLEdBQXBCLEVBQXlCLElBQXpCO29CQUNRTyxNQUFSLEdBQWlCLFlBQVk7b0JBQ3JCLEtBQUtDLE1BQUwsS0FBZ0IsR0FBcEIsRUFBeUI7NEJBQ2JDLEtBQUtDLEtBQUwsQ0FBV3ZCLFFBQVF3QixRQUFuQixDQUFSO2lCQURKLE1BRU87MkJBQ0ssSUFBSUMsS0FBSixDQUFVLEtBQUtDLFVBQWYsQ0FBUjs7YUFKUjtvQkFPUUMsT0FBUixHQUFrQnJCLEtBQUtXLE9BQU8sSUFBSVEsS0FBSixDQUFVLEtBQUtDLFVBQWYsQ0FBUCxDQUF2QjtvQkFDUUUsSUFBUixDQUFhLElBQWI7U0FYRyxDQUFQO0tBaEJlO3FCQThCRixVQUFVSixRQUFWLEVBQW9CO2NBQzNCSyxVQUFVTCxTQUFTTSxJQUF6QjtjQUNNQyxhQUFhRixRQUFRRyxLQUFLQyxLQUFMLENBQVdELEtBQUtFLE1BQUwsS0FBZ0JMLFFBQVFNLE1BQW5DLENBQVIsQ0FBbkI7Y0FDTUMsZ0JBQWdCTCxXQUFXTSxNQUFYLENBQWtCQyxRQUFsQixDQUEyQnpCLEdBQWpEO2NBQ00wQixlQUFlLEtBQUt0QyxHQUFMLENBQVNFLGFBQVQsQ0FBdUIsYUFBdkIsQ0FBckI7Y0FDTXFDLGNBQWMsS0FBS3ZDLEdBQUwsQ0FBU0UsYUFBVCxDQUF1QixLQUF2QixDQUFwQjthQUNLc0MscUJBQUwsQ0FBMkJELFdBQTNCLEVBQXdDRCxZQUF4QzthQUNLRyxnQkFBTCxDQUFzQk4sYUFBdEIsRUFBcUNHLFlBQXJDO0tBckNlO3NCQXVDRCxVQUFVMUIsR0FBVixFQUFlMEIsWUFBZixFQUE2QjtjQUNyQ0ksUUFBUXpDLFNBQVMwQyxhQUFULENBQXVCLEtBQXZCLENBQWQ7Y0FDTUMsR0FBTixHQUFZaEMsR0FBWjtjQUNNaUMsU0FBTixDQUFnQkMsR0FBaEIsQ0FBb0IsWUFBcEI7cUJBQ2FDLFdBQWIsQ0FBeUJMLEtBQXpCO0tBM0NlOzJCQTZDSSxVQUFVSCxXQUFWLEVBQXVCRCxZQUF2QixFQUFxQztZQUNwRCxDQUFDQyxXQUFMLEVBQWtCO3FCQUNMUyxXQUFiLENBQXlCVCxXQUF6Qjs7Q0EvQ0Q7O0FDQVB4QyxRQUFRa0QsSUFBUjs7OzsifQ=="}